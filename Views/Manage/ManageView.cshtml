@model RescueBus.Models.ManageViewModel

<div class="container mt-4">
    <!-- Drivers Section -->
    <div class="card shadow-sm p-4 mb-5 rounded">
        <h2 class="mb-4 text-center fw-bold">Driver and Vehicle Management</h2>
        <h4 class="text-primary">Drivers</h4>

        <div class="row align-items-center mb-3">
            <div class="col-md-4">
                <input type="text" id="searchBox" placeholder="Search Driver Name" class="form-control" />
            </div>
            <div class="col-md-3">
                <select id="serviceFilter" class="form-select">
                    <option value="ALL">Select Service</option>
                    <option value="ALS">ALS</option>
                    <option value="BLS">BLS</option>
                    <option value="MUV">MUV</option>
                    <option value="EMA">EMA</option>
                    <option value="AAS">AAS</option>
                    <option value="PatientTransport">Patient Transport</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="button" id="searchbutton" class="btn btn-outline-primary w-100">Search</button>
            </div>
            <div class="col-md-3 text-end">
                <button class="btn btn-success" onclick="location.href='@Url.Action("CreateDriverView", "Manage")'">Create</button>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover align-middle" id="DriverTable">
                <thead class="table-light">
                    <tr>
                        <th>Image</th>
                        <th>First Name</th>
                        <th>Phone Number</th>
                        <th>Service</th>
                        <th>Controls</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var d in Model.Drivers)
                    {
                        <tr>
                            <td>
                                @if (!string.IsNullOrWhiteSpace(d.imagepath))
                                {
                                    <img src="@Url.Content(d.imagepath)" alt="Driver Image" class="rounded-circle" width="50" height="50" />
                                }
                                else
                                {
                                    <span class="text-muted">No image</span>
                                }
                            </td>
                            <td>@d.Name</td>
                            <td>@d.PhoneNumber</td>
                            <td>@d.servicetype</td>
                            <td>
                                <a class="btn btn-sm btn-warning me-2" href="@Url.Action("EditDriverView", "Manage", new { id = d.Id })">Update</a>
                                <button class="btn btn-sm btn-danger" onclick="deleteDriver(this)">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Vehicles Section -->
    <div class="card shadow-sm p-4 mb-5 rounded">
        <h4 class="text-primary">Vehicles</h4>
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div></div>
            <div>
                <button class="btn btn-success" onclick="location.href='@Url.Action("AddVehicleView", "Manage")'">Create</button>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover align-middle">
                <thead class="table-light">
                    <tr>
                        <th>Image</th>
                        <th>Registration</th>
                        <th>Service</th>
                        <th>Controls</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var v in Model.Vehicles)
                    {
                        <tr>
                            <td>
                                @if (!string.IsNullOrWhiteSpace(v.imagepath))
                                {
                                    <img src="@Url.Content(v.imagepath)" alt="Vehicle Image" class="rounded-circle" width="50" height="50" />
                                }
                                else
                                {
                                    <span class="text-muted">No image</span>
                                }
                            </td>
                            <td>@v.RegistrationId</td>
                            <td>@v.Type</td>
                            <td>
                                <a class="btn btn-sm btn-warning me-2" href="@Url.Action("EditVehicleView", "Manage", new { id = v.RegistrationId })">Update</a>
                                <button class="btn btn-sm btn-danger" onclick="deleteVehicle(this)">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="text-end mt-3">
            <button type="button" class="btn btn-outline-success" onclick="location.href='@Url.Action("ExportVehiclesToFile", "Manage")'">Export</button>
        </div>
    </div>
</div>

<script>
    function deleteDriver(button) {
        const row = button.closest("tr");
        row.remove();
    }
    function deleteVehicle(button) {
        const row = button.closest("tr");
        row.remove();
    }

    function searchDriverByName() {
        console.log("Search function triggered");
        const searchTerm = document.getElementById("searchBox").value.toLowerCase();
        const rows = document.querySelectorAll("#DriverTable tbody tr");

        if (!searchTerm) {
            // If search is empty, show all rows immediately
            rows.forEach(row => row.style.display = "");
            return;
        }

        // Hide rows that don't match, show rows that match
        rows.forEach(row => {
            const nameCell = row.cells[1];
            const name = nameCell.textContent.toLowerCase();

            if (name.includes(searchTerm)) {
                row.style.display = "";           // Show matching rows
                row.style.backgroundColor = "lightgreen";
                row.scrollIntoView({ behavior: "smooth", block: "center" });
            } else {
                row.style.display = "none";       // Hide non-matching rows
                row.style.backgroundColor = "";
            }
        });

        // After 5 seconds, reset table to show all rows and remove highlights
        setTimeout(() => {
            rows.forEach(row => {
                row.style.display = "";
                row.style.backgroundColor = "";
            });
        }, 5000);
    }


    // Trigger search on button click
    document.getElementById("searchbutton").addEventListener("click", searchDriverByName);

    document.getElementById('serviceFilter').addEventListener('change', function () {
        const selectedService = this.value;
        const rows = document.querySelectorAll("#DriverTable tbody tr");
        rows.forEach(row => {
            const serviceCell = row.cells[3].textContent.trim();

            if (selectedService === "ALL") {
                row.style.display = "";
            } else {
                if (serviceCell === selectedService) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            }
        });
    });
   

</script>
